---

- name: Check if VM exists
  community.libvirt.virt:
    name: "{{ libvirt_destroy_machine.name }}"
    command: status
  register: vm_status
  failed_when: false
  changed_when: false

- name: Try graceful shutdown first
  community.libvirt.virt:
    name: '{{ libvirt_destroy_machine.name }}'
    state: shutdown
  when: vm_status.status is defined and vm_status.status == 'running'
  failed_when: false
  register: shutdown_result

- name: Wait for graceful shutdown
  ansible.builtin.wait_for:
    timeout: 5
  when:
    - vm_status.status is defined
    - vm_status.status == 'running'
    - shutdown_result is changed
  failed_when: false

- name: Check if VM is still running after graceful shutdown
  community.libvirt.virt:
    name: "{{ libvirt_destroy_machine.name }}"
    command: status
  register: vm_status_after_shutdown
  failed_when: false
  changed_when: false
  when: vm_status.status is defined

- name: Force destroy VM if still running
  community.libvirt.virt:
    name: '{{ libvirt_destroy_machine.name }}'
    state: destroyed
  when:
    - vm_status.status is defined
    - vm_status_after_shutdown.status is defined
    - vm_status_after_shutdown.status == 'running'
  failed_when: false

- name: Undefine the virtual machine
  community.libvirt.virt:
    name: '{{ libvirt_destroy_machine.name }}'
    command: undefine
    flags:
      - nvram
  when: vm_status.status is defined
  failed_when: false

- name: Destroy virtual machine directory
  ansible.builtin.file:
    path: "/var/lib/libvirt/images/{{ libvirt_destroy_machine.name }}"
    state: absent
  when: vm_status.status is defined
